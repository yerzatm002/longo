{"ast":null,"code":"import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\"; // create the api\n\nexport const appApi = createApi({\n  reducerPath: \"appApi\",\n  baseQuery: fetchBaseQuery({\n    baseUrl: \"http://localhost:8080\"\n  }),\n  endpoints: builder => ({\n    signup: builder.mutation({\n      query: user => ({\n        url: \"/users/signup\",\n        method: \"POST\",\n        body: user\n      })\n    }),\n    login: builder.mutation({\n      query: user => ({\n        url: \"/users/login\",\n        method: \"POST\",\n        body: user\n      })\n    }),\n    // creating product\n    createProduct: builder.mutation({\n      query: product => ({\n        url: \"/products\",\n        body: product,\n        method: \"POST\"\n      })\n    }),\n    deleteProduct: builder.mutation({\n      query: _ref => {\n        let {\n          product_id,\n          user_id\n        } = _ref;\n        return {\n          url: `/products/${product_id}`,\n          body: {\n            user_id\n          },\n          method: \"DELETE\"\n        };\n      }\n    }),\n    updateProduct: builder.mutation({\n      query: product => ({\n        url: `/products/${product.id}`,\n        body: product,\n        method: \"PATCH\"\n      })\n    }),\n    // add to cart\n    addToCart: builder.mutation({\n      query: cartInfo => ({\n        url: \"/products/add-to-cart\",\n        body: cartInfo,\n        method: \"POST\"\n      })\n    }),\n    // remove from cart\n    removeFromCart: builder.mutation({\n      query: body => ({\n        url: \"/products/remove-from-cart\",\n        body,\n        method: \"POST\"\n      })\n    }),\n    // increase cart\n    increaseCartProduct: builder.mutation({\n      query: body => ({\n        url: \"/products/increase-cart\",\n        body,\n        method: \"POST\"\n      })\n    }),\n    // decrease cart\n    decreaseCartProduct: builder.mutation({\n      query: body => ({\n        url: \"/products/decrease-cart\",\n        body,\n        method: \"POST\"\n      })\n    }),\n    // create order\n    createOrder: builder.mutation({\n      query: body => ({\n        url: \"/orders\",\n        method: \"POST\",\n        body\n      })\n    })\n  })\n});\nexport const {\n  useSignupMutation,\n  useLoginMutation,\n  useCreateProductMutation,\n  useAddToCartMutation,\n  useRemoveFromCartMutation,\n  useIncreaseCartProductMutation,\n  useDecreaseCartProductMutation,\n  useCreateOrderMutation,\n  useDeleteProductMutation,\n  useUpdateProductMutation\n} = appApi;\nexport default appApi;","map":{"version":3,"names":["createApi","fetchBaseQuery","appApi","reducerPath","baseQuery","baseUrl","endpoints","builder","signup","mutation","query","user","url","method","body","login","createProduct","product","deleteProduct","product_id","user_id","updateProduct","id","addToCart","cartInfo","removeFromCart","increaseCartProduct","decreaseCartProduct","createOrder","useSignupMutation","useLoginMutation","useCreateProductMutation","useAddToCartMutation","useRemoveFromCartMutation","useIncreaseCartProductMutation","useDecreaseCartProductMutation","useCreateOrderMutation","useDeleteProductMutation","useUpdateProductMutation"],"sources":["C:/Users/Togma/Downloads/ecomern-frontend-main/ecomern-frontend-main/src/services/appApi.js"],"sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\n// create the api\n\nexport const appApi = createApi({\n    reducerPath: \"appApi\",\n    baseQuery: fetchBaseQuery({ baseUrl: \"http://localhost:8080\" }),\n    endpoints: (builder) => ({\n        signup: builder.mutation({\n            query: (user) => ({\n                url: \"/users/signup\",\n                method: \"POST\",\n                body: user,\n            }),\n        }),\n\n        login: builder.mutation({\n            query: (user) => ({\n                url: \"/users/login\",\n                method: \"POST\",\n                body: user,\n            }),\n        }),\n        // creating product\n        createProduct: builder.mutation({\n            query: (product) => ({\n                url: \"/products\",\n                body: product,\n                method: \"POST\",\n            }),\n        }),\n\n        deleteProduct: builder.mutation({\n            query: ({ product_id, user_id }) => ({\n                url: `/products/${product_id}`,\n                body: {\n                    user_id,\n                },\n                method: \"DELETE\",\n            }),\n        }),\n\n        updateProduct: builder.mutation({\n            query: (product) => ({\n                url: `/products/${product.id}`,\n                body: product,\n                method: \"PATCH\",\n            }),\n        }),\n\n        // add to cart\n        addToCart: builder.mutation({\n            query: (cartInfo) => ({\n                url: \"/products/add-to-cart\",\n                body: cartInfo,\n                method: \"POST\",\n            }),\n        }),\n        // remove from cart\n        removeFromCart: builder.mutation({\n            query: (body) => ({\n                url: \"/products/remove-from-cart\",\n                body,\n                method: \"POST\",\n            }),\n        }),\n\n        // increase cart\n        increaseCartProduct: builder.mutation({\n            query: (body) => ({\n                url: \"/products/increase-cart\",\n                body,\n                method: \"POST\",\n            }),\n        }),\n\n        // decrease cart\n        decreaseCartProduct: builder.mutation({\n            query: (body) => ({\n                url: \"/products/decrease-cart\",\n                body,\n                method: \"POST\",\n            }),\n        }),\n        // create order\n        createOrder: builder.mutation({\n            query: (body) => ({\n                url: \"/orders\",\n                method: \"POST\",\n                body,\n            }),\n        }),\n    }),\n});\n\nexport const {\n    useSignupMutation,\n    useLoginMutation,\n    useCreateProductMutation,\n    useAddToCartMutation,\n    useRemoveFromCartMutation,\n    useIncreaseCartProductMutation,\n    useDecreaseCartProductMutation,\n    useCreateOrderMutation,\n    useDeleteProductMutation,\n    useUpdateProductMutation,\n} = appApi;\n\nexport default appApi;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}